[{"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\index.js":"1","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\App.js":"3","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\store.js":"4","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Footer.js":"5","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\PaymentComponent.js":"6","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Navbar.js":"7","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\OTPVerificationForm.js":"8","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\ManagerCustomersComponent.js":"9","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\SignUpForm.js":"10","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\OneAccountComponent.js":"11","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\ChangePasswordComponent.js":"12","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\UpdateCustomerComponent.js":"13","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\contactUsComponent.js":"14","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\WithDrawRequests.js":"15","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\LoanComponent.js":"16","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\LoginPageComponent.js":"17","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\CustomerAccountComponent.js":"18","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Admin-Navbar\\MainPage.js":"19","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\FDComponent.js":"20","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\reducer\\user.reducer.js":"21","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\type.js":"22","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\services\\customer.service.js":"23","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Admin-Navbar\\admin-navbar.js":"24","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\common\\constant.js":"25","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\services\\auth.service.js":"26","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\services\\accounts.service.js":"27","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\action\\user.action.js":"28","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Admin-Navbar\\Sidebar.js":"29"},{"size":614,"mtime":1738091840019,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1738091840046,"results":"32","hashOfConfig":"31"},{"size":6159,"mtime":1738091839978,"results":"33","hashOfConfig":"31"},{"size":252,"mtime":1738091841665,"results":"34","hashOfConfig":"31"},{"size":232,"mtime":1738993561766,"results":"35","hashOfConfig":"31"},{"size":2230,"mtime":1739082776978,"results":"36","hashOfConfig":"31"},{"size":8584,"mtime":1738993559149,"results":"37","hashOfConfig":"31"},{"size":1866,"mtime":1738091840205,"results":"38","hashOfConfig":"31"},{"size":5650,"mtime":1738091840178,"results":"39","hashOfConfig":"31"},{"size":3310,"mtime":1738091840282,"results":"40","hashOfConfig":"31"},{"size":8270,"mtime":1739043997658,"results":"41","hashOfConfig":"31"},{"size":3738,"mtime":1738091840076,"results":"42","hashOfConfig":"31"},{"size":2959,"mtime":1738091840295,"results":"43","hashOfConfig":"31"},{"size":423,"mtime":1738993654866,"results":"44","hashOfConfig":"31"},{"size":2259,"mtime":1738091840306,"results":"45","hashOfConfig":"31"},{"size":2253,"mtime":1739045650424,"results":"46","hashOfConfig":"31"},{"size":5365,"mtime":1738993724943,"results":"47","hashOfConfig":"31"},{"size":4867,"mtime":1738091840102,"results":"48","hashOfConfig":"31"},{"size":527,"mtime":1738091840416,"results":"49","hashOfConfig":"31"},{"size":2181,"mtime":1739045825657,"results":"50","hashOfConfig":"31"},{"size":383,"mtime":1738091841714,"results":"51","hashOfConfig":"31"},{"size":108,"mtime":1738091841676,"results":"52","hashOfConfig":"31"},{"size":2980,"mtime":1738091841646,"results":"53","hashOfConfig":"31"},{"size":1547,"mtime":1738993491913,"results":"54","hashOfConfig":"31"},{"size":47,"mtime":1738091840353,"results":"55","hashOfConfig":"31"},{"size":2203,"mtime":1738091841632,"results":"56","hashOfConfig":"31"},{"size":1501,"mtime":1738091841621,"results":"57","hashOfConfig":"31"},{"size":291,"mtime":1738091841693,"results":"58","hashOfConfig":"31"},{"size":5640,"mtime":1738091840428,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"21vqog",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\index.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\reportWebVitals.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\App.js",["161","162","163","164","165"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport LoginPageComponent from \"./Components/LoginPageComponent\";\nimport SignupForm from \"./Components/SignUpForm\";\nimport OTPVerificationForm from \"./Components/OTPVerificationForm\";\nimport OneAccountComponent from \"./Components/OneAccountComponent\";\nimport CustomerAccountsComponent from \"./Components/CustomerAccountComponent\";\nimport Navbar from \"./component/Navbar\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { MainPage } from \"./component/Admin-Navbar/MainPage\";\n\n// import UHome from \"./pages/user/UHome\";\n\nimport PaymentComponent from \"./Components/PaymentComponent\";\nimport ManageCustomersComponent from \"./Components/ManagerCustomersComponent\";\nimport UpdateCustomerComponent from \"./Components/UpdateCustomerComponent\";\nimport ChangePasswordComponent from \"./Components/ChangePasswordComponent\";\nimport { Footer } from \"./component/Footer\";\nimport ContactUsComponent from './Components/contactUsComponent';\nimport WithDrawRequests from './Components/WithDrawRequests';\nimport LoanComponent from \"./Components/LoanComponent\";\nimport FDComponent from \"./Components/FDComponent\";\n\nfunction App() {\n\n  return (\n    <div>\n      <body>\n      <BrowserRouter>\n        <Navbar></Navbar>\n        \n        <Routes>\n          <Route\n            path=\"/\"\n            element={<LoginPageComponent ></LoginPageComponent>}\n          ></Route>\n          <Route\n            path=\"/login\"\n            element={<LoginPageComponent></LoginPageComponent>}\n          ></Route>\n          <Route\n            path=\"/customers\"\n            element={<ManageCustomersComponent></ManageCustomersComponent>}\n          ></Route>\n          <Route\n            path=\"/payment\"\n            element={<PaymentComponent></PaymentComponent>}\n          ></Route>\n           <Route\n            path=\"/withdrawreqs\"\n            element={<WithDrawRequests></WithDrawRequests>}\n          ></Route>\n\n          <Route\n            path=\"/verifyOtp\"\n            element={<OTPVerificationForm></OTPVerificationForm>}\n          ></Route>\n          <Route path=\"/signup\" element={<SignupForm></SignupForm>}></Route>\n          <Route path=\"/register\" element={<SignupForm></SignupForm>}></Route>\n          <Route\n            path=\"/one-account/:id\"\n            element={<OneAccountComponent></OneAccountComponent>}\n          />\n\n          <Route\n            path=\"/customer-accounts/:id\"\n            element={<CustomerAccountsComponent></CustomerAccountsComponent>}\n          />\n           <Route\n            path=\"update-customer/:id\"\n            element={<UpdateCustomerComponent></UpdateCustomerComponent>}\n          />\n          <Route\n            path=\"loansection/:id\"\n            element={<LoanComponent></LoanComponent>}\n          />\n          <Route\n            path=\"fdsection/:id\"\n            element={<FDComponent></FDComponent>}\n          />\n           <Route\n            path=\"/forgotPass\"\n            element={<ChangePasswordComponent></ChangePasswordComponent>}\n          />\n          <Route\n            path=\"/contactUs\"\n            element={<ContactUsComponent></ContactUsComponent>}\n          />\n          <Route path=\"/user/*\">\n            //{\" \"}\n            {/* <Route\n              path=\"uhome\"\n              element={\n                <AuthGuard roles={[\"USER\"]}>\n                  <UHome />\n                </AuthGuard>\n              }\n            ></Route> */}\n            {/* //           <Route path='allTransaction' element={<AuthGuard roles={['ROLE_USER']}><AllTransaction /></AuthGuard>}></Route>\n//           <Route path='balance' element={<AuthGuard roles={['ROLE_USER']}><Balance /></AuthGuard>}></Route>\n//           <Route path='changePassword' element={<AuthGuard roles={['ROLE_USER']}><ChangePassword /></AuthGuard>}></Route>\n//           <Route path='sendMoney' element={<AuthGuard roles={['ROLE_USER']}><SendMoney /></AuthGuard>}></Route>\n//           <Route path='viewProfile' element={<AuthGuard roles={['ROLE_USER']}><UViewProfile /></AuthGuard>}></Route> */}\n            //{\" \"}\n          </Route>\n        </Routes>\n        {/* <Footer></Footer> */}\n      </BrowserRouter></body>\n    </div>\n  );\n}\n\nexport default App;\n\n// <Navbar />\n//       <Routes>\n//         <Route path='/' element={<Index />}></Route>\n//         <Route path='/login' element={<Login />}></Route>\n//         <Route path='/register' element={<Signup />}></Route>\n//         <Route path='/401' element={<UnAuthorized />}></Route>\n//         <Route path='/forgotPassword' element={<ForgotPassword />}></Route>\n//         <Route path='/netbanking' element={<NetBanking />}></Route>\n//         {/* <Route path='/user/applyJob/:id' element={<ApplyJob />}></Route> */}\n\n//         {/* <Route path='/user/*'>\n//         <Route path='applyJob/:id' element={<AuthGuard roles={['ROLE_USER']}><ApplyJob /></AuthGuard>} />\n//         <Route path='appliedJob' element={<AuthGuard roles={['ROLE_USER']}><AppliedJob /></AuthGuard>} />\n//       </Route> */}\n\n//         <Route path='/admin/*' element={\n//           <AuthGuard roles={['ROLE_ADMIN']}>\n//             <MainPage />\n//           </AuthGuard>\n//         }> </Route>\n\n//         <Route path='/emp/*' element={\n//           <AuthGuard roles={['ROLE_EMP']}>\n//             <MainPage />\n//           </AuthGuard>\n//         }></Route>\n\n//         <Route path='/user/*' >\n//           <Route path='uhome' element={<AuthGuard roles={['ROLE_USER']}><UHome /></AuthGuard>}></Route>\n//           <Route path='allTransaction' element={<AuthGuard roles={['ROLE_USER']}><AllTransaction /></AuthGuard>}></Route>\n//           <Route path='balance' element={<AuthGuard roles={['ROLE_USER']}><Balance /></AuthGuard>}></Route>\n//           <Route path='changePassword' element={<AuthGuard roles={['ROLE_USER']}><ChangePassword /></AuthGuard>}></Route>\n//           <Route path='sendMoney' element={<AuthGuard roles={['ROLE_USER']}><SendMoney /></AuthGuard>}></Route>\n//           <Route path='viewProfile' element={<AuthGuard roles={['ROLE_USER']}><UViewProfile /></AuthGuard>}></Route>\n//         </Route>\n\n//       </Routes>\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\store.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Footer.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\PaymentComponent.js",["166","167"],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Navbar.js",["168","169","170","171","172","173","174"],[],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { clearCurrentUser } from \"../store/action/user.action\";\nimport \"./navbar.css\";\n\nconst Navbar = () => {\n  const loginUser = sessionStorage.getItem(\"CUSTOMER\");\n  const admin = sessionStorage.getItem(\"ADMIN\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  console.log(loginUser);\n\n  const logout = () => {\n    console.log(\"Logout function called\");\n    console.log(localStorage.getItem(\"JWT_TOKEN\"));\n    localStorage.removeItem(\"JWT_TOKEN\");\n    console.log(localStorage.getItem(\"JWT_TOKEN\"));\n    console.log(\"Dispatching clearCurrentUser\");\n    dispatch(clearCurrentUser());\n    sessionStorage.removeItem(\"CUSTOMER\");\n    sessionStorage.removeItem(\"ADMIN\");\n    console.log(\"Navigating to login page\");\n    navigate(\"/login\");\n  };\n\n  if (loginUser != null || admin != null) {\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-danger mynav\">\n          <div className=\"container-fluid\">\n            <Link className=\"navbar-brand text-white\" to=\"/\">\n              <i class=\"fa-solid fa-building-columns\"></i>NexBank\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              {\n                // Show links for logged-in users\n                <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <Link\n                      to=\"/login\"\n                      className=\"nav-link active\"\n                      onClick={logout}\n                    >\n                      Logout\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"contactUs\" className=\"nav-link active\">\n                      {\" \"}\n                      ContactUs\n                    </Link>\n                  </li>\n                </ul>\n              }\n\n              {loginUser && (\n                <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item dropdown\">\n                    <a\n                      className=\"nav-link dropdown-toggle active\"\n                      href=\"#\"\n                      id=\"navbarDropdown\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      <i className=\"fa-solid fa-circle-user\"></i>{\" \"}\n                      {loginUser.firstName}\n                    </a>\n                    <ul\n                      className=\"dropdown-menu\"\n                      aria-labelledby=\"navbarDropdown\"\n                    >\n                      <li>\n                        <a className=\"dropdown-item\" onClick={() => logout()}>\n                          logout\n                        </a>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              )}\n            </div>\n          </div>\n        </nav>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-danger mynav\">\n          <div className=\"container-fluid\">\n            <Link className=\"navbar-brand text-white\" to=\"/\">\n              {/* <i class=\"fa-solid fa-building-columns\"></i> */}\n              <i class=\"fa-solid fa-bank sunbank-icon\"></i>\n              NexBank\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div\n              className=\"collapse navbar-collapse\"\n              id=\"navbarSupportedContent\"\n            >\n              {loginUser && (\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <Link to=\"/user/uhome\" className=\"nav-link active\">\n                      {\" \"}\n                      Home\n                    </Link>\n                  </li>\n                  <li class=\"nav-item dropdown\">\n                    <a\n                      class=\"nav-link dropdown-toggle\"\n                      href=\"#\"\n                      id=\"navbarDropdown\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      Account Info\n                    </a>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                      <li>\n                        <Link class=\"dropdown-item\" to=\"/user/viewProfile\">\n                          View Profile\n                        </Link>\n                      </li>\n                      <li>\n                        <Link class=\"dropdown-item\" to=\"/user/changePassword\">\n                          Change Password\n                        </Link>\n                      </li>\n                      <li>\n                        <hr class=\"dropdown-divider\" />\n                      </li>\n                    </ul>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to=\"/user/sendmoney\" className=\"nav-link active\">\n                      {\" \"}\n                      Send Money\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to=\"/user/allTransaction\" className=\"nav-link active\">\n                      {\" \"}\n                      Transaction\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to=\"/user/balance\" className=\"nav-link active\">\n                      {\" \"}\n                      Balance\n                    </Link>\n                  </li>\n                </ul>\n              )}\n\n              {\n                // Show links for non-logged-in users\n                <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link active\">\n                      Login\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"contactUs\" className=\"nav-link active\">\n                      {\" \"}\n                      ContactUs\n                    </Link>\n                  </li>\n\n                  <li className=\"nav-item\">\n                    <Link to=\"register\" className=\"nav-link active\">\n                      {\" \"}\n                      Register\n                    </Link>\n                  </li>\n                </ul>\n              }\n\n              {loginUser && (\n                <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                  <li className=\"nav-item dropdown\">\n                    <a\n                      className=\"nav-link dropdown-toggle active\"\n                      href=\"#\"\n                      id=\"navbarDropdown\"\n                      role=\"button\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-expanded=\"false\"\n                    >\n                      <i className=\"fa-solid fa-circle-user\"></i>{\" \"}\n                      {loginUser.firstName}\n                    </a>\n                    <ul\n                      className=\"dropdown-menu\"\n                      aria-labelledby=\"navbarDropdown\"\n                    >\n                      <li>\n                        <a className=\"dropdown-item\" onClick={() => logout()}>\n                          logout\n                        </a>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              )}\n            </div>\n          </div>\n        </nav>\n      </>\n    );\n  }\n};\n\nexport default Navbar;\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\OTPVerificationForm.js",["175"],[],"import React, { useState } from 'react';\nimport './OTPVerification.css'; // Import the CSS file\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { apiUrl } from '../common/constant';\n\n\nconst OTPVerificationForm = () => {\n  const location = useLocation();\n  const optData = location.state.obj.otp; // Access the passed state\n  const email=location.state.obj.email;\n  const name=location.state.obj.name;\n  const [otp, setOtp] = useState('');\nconst navigate = useNavigate();\n  const handleOtpChange = (e) => {\n    setOtp(e.target.value);\n  };\n\n  const handleVerify = async (e) => {\n    e.preventDefault();\n\n  \n    if (otp === (optData.otp)) {\n      try {\n       \n        const response = await axios.post(`${apiUrl}/customers/save`, {\n          email: email,name:name\n        });\n        alert(\"you can login now!!! your name is your password\")\n        navigate('/login')\n      \n      } catch (error) {\n       \n      }\n    } else {\n      // Handle incorrect OTP\n      alert('Incorrect OTP');\n    }\n  };\n\n  return (<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}> <form className=\"form\"  >\n      <div className=\"title\">OTP</div>\n      <div className=\"title\">Verification Code</div>\n      <p className=\"message\">We have sent a verification code to your mobile number</p>\n      <div className=\"inputs\">\n        <input\n          type=\"text\"\n          maxLength=\"4\"\n          value={otp}\n          onChange={handleOtpChange}\n        />\n        {/* ... repeat for other input fields ... */}\n      </div>\n      <button className=\"action\" onClick={handleVerify}>Verify Me</button>\n      <button className=\"action1\" onClick={()=>{navigate('/register')}}>Did'nt Recieve OTP</button>\n    </form></div>\n   \n  );\n};\n\nexport default OTPVerificationForm;","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\ManagerCustomersComponent.js",["176","177"],[],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\"; // You can use this library for forms in React\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nimport CustomerService from \"../services/customer.service\";\n\nfunction ManageCustomersComponent() {\n  const [customers, setCustomers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [roles, setRoles] = useState(null);\n\n  const navigate = useNavigate();\n\n  const { handleSubmit, register } = useForm();\n  const customerService = new CustomerService();\n  useEffect(() => {\n    // console.log(localStorage.getItem(\"username\"));\n    setRoles(localStorage.getItem(\"ROLES\"));\n    setUsername(localStorage.getItem(\"username\"));\n    searchCustomers();\n  }, []);\n\n  const searchCustomers = async () => {\n    try {\n      const response = await customerService.searchCustomers(searchKeyword, 0);\n      console.log(response);\n      console.log(typeof response.customerDTO);\n      const data = response.customerDTO;\n      console.log(typeof data);\n\n      // Update 'customers' state with the fetched data\n      setCustomers(data);\n\n      // Clear any previous error message\n      setErrorMessage(null);\n    } catch (error) {\n      // Handle errors and set error message\n      setErrorMessage(error.message);\n    }\n  };\n\n\n\n  const handleDeleteButton = (customer) => {\n    Swal.fire({\n      title: \"Are you sure that you want to delete this customer ?\",\n      showDenyButton: true,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      denyButtonText: `No`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        customerService.deleteCustomer(customer.id);\n      }\n\n      searchCustomers();\n    });\n  };\n\n  const handlewithdrawreqs = () => {\n    navigate(\"/withdrawreqs\");\n  };\n\n  const goToUpdateCustomer = (customer) => {\n    navigate(`/update-customer/${customer.id}`);\n  };\n\n  const handleCustomerAccounts = (customer) => {\n    navigate(`/customer-accounts/${customer.id}`);\n  };\n\n  const renderCustomerTable = () => {\n    if (!customers) return null;\n\n    return (\n      <div>\n        <button type=\"button\" onClick={handlewithdrawreqs}>\n          withdraw requests\n        </button>\n        <table className=\"table mt-5\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {customers.map((c) => (\n              <tr key={c.id}>\n                <td>{c.name}</td>\n                <td>{c.email}</td>\n                <td>\n                  {roles && roles.includes(\"ADMIN\") && (\n                    <>\n                      <button\n                        onClick={() => handleDeleteButton(c)}\n                        className=\"btn btn-danger\"\n                        style={{ marginRight: \"8px\", fontSize: \"15px\" }}\n                      >\n                        Delete\n                      </button>\n                      <button\n                        onClick={() => goToUpdateCustomer(c)}\n                        className=\"btn btn-warning\"\n                        style={{ marginRight: \"8px\", fontSize: \"15px\" }}\n                      >\n                        Update\n                      </button>\n                    </>\n                  )}\n                  <button\n                    onClick={() => handleCustomerAccounts(c)}\n                    className=\"btn btn-success\"\n                    style={{ marginRight: \"8px\", fontSize: \"15px\" }}\n                  >\n                    View Accounts\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const renderPagination = () => {\n    if (!customers) return null;\n\n    return (\n      <ul className=\"nav nav-pills\">\n      </ul>\n    );\n  };\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        {customers ? (\n          <div style={{ textAlign: \"center\" }} className=\"card\">\n            <div className=\"card-header\">\n              <h2 style={{ fontSize: \"40px\" }}>Customers</h2>\n            </div>\n            <div\n              className=\"card-body\"\n              style={{ fontSize: \"30px\", textAlign: \"center\" }}\n            >\n              <form onSubmit={handleSubmit(searchCustomers)}>\n                <div className=\"input-group\">\n                  <label\n                    className=\"input-group-text\"\n                    style={{ fontSize: \"30px\" }}\n                  >\n                    Keyword:\n                  </label>\n                  <input\n                    type=\"text\"\n                    {...register(\"keyword\")}\n                    className=\"form-control\"\n                    style={{ fontSize: \"28px\" }}\n                    onChange={(e) => {\n                      setSearchKeyword(e.target.value);\n                    }}\n                  />\n                  <button\n                    className=\"btn btn-warning\"\n                    style={{ fontSize: \"30px\" }}\n                  >\n                    Search\n                  </button>\n                </div>\n              </form>\n              {renderCustomerTable()}\n              {renderPagination()}\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-danger\">\n            {errorMessage ? errorMessage : \"Loading, please wait ...\"}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ManageCustomersComponent;\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\SignUpForm.js",["178"],[],"\n\n\n\nimport React, { useState } from 'react';\nimport './SignUpForm.css';\n\nimport axios from 'axios';\nimport { apiUrl } from '../common/constant';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst SignupForm = () => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [isWaiting, setIsWaiting] = useState(false);\n  const [isValidEmail, setIsValidEmail] = useState(true);\n\n\n\n\nconst navigate = useNavigate();\nconst handleEmailChange = (event) => {\n  const newEmail = event.target.value;\n  setEmail(newEmail);\n\n  // Regular expression for basic email validation\n  //^[A-Za-z][A-Za-z0-9_\\.\\-]*@leetcode(\\\\?com)?\\\\.com$\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  setIsValidEmail(emailPattern.test(newEmail));\n};\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit =  (e) => {\n    e.preventDefault();\n    if (name.trim() === '' || email.trim() === '') {\n      alert('Please fill in all fields.'); // You can show an error message\n      return;\n    }\n    setIsWaiting(true);\n   // const emailPattern = /@/;\n\n    // if (!emailPattern.test(email)) {\n    //   alert('Invalid email format');\n    //   return; // Do not proceed further\n    // }\n    console.log('Email:', email);\n    console.log('Name:', name);\n\n    try {\n      // Here you can use the axios.post method to send data to the server.\n      // Example: \n      axios.post(`${apiUrl}/verifyOtp`, {\n        email: email,\n        \n      }).then((response) => {\n        console.log(response);\n        const obj = { email: email, name: name, otp: response.data };\n        // After a successful response, you can navigate to the verification page.\n        navigate('/verifyOTP', {state: { obj: obj }});\n      });\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"container mt-4\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '70vh' }}>\n      <h2></h2>\n      <form className=\"form\">\n        <p className=\"title\">Register</p>\n        <p className=\"message\">Signup now and get full access to our app.</p>\n        <div className=\"flex\">\n          <label>\n            <input\n              required\n              placeholder=\"\"\n              type=\"text\"\n              className=\"input\"\n              value={name}\n              onChange={handleNameChange}\n            />\n            <span>Name</span>\n          </label>\n          <label>\n            <input\n              required\n              placeholder=\"\"\n              type=\"email\"\n              className={`input ${isValidEmail ? '' : 'invalid'}`}\n              //className=\"input\"\n              value={email}\n              onChange={handleEmailChange}\n            />\n            <span>Email</span>\n      {!isValidEmail && <p className=\"error-message\">Please enter a valid email address.</p>}\n          </label>\n        </div>\n        <button className=\"submit\" onClick={handleSubmit}>Submit</button>\n        <span\n        id=\"waittorenderotpverification\"\n        style={{ display: isWaiting ? 'inline' : 'none' }}\n      >\n        Please wait...\n      </span>\n        <p className=\"signin\">\n          Already have an account? <a href=\"/login\">Sign in</a>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupForm;","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\OneAccountComponent.js",["179","180","181","182"],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\ChangePasswordComponent.js",["183"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { apiUrl } from \"../common/constant\";\n\nimport axios from \"axios\";\n\nfunction RequestResetComponent() {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [cnfpassword, setcnfPassword] = useState(\"\");\n  const [cnf2password, setcnf2Password] = useState(\"\");\n  const [verifiedOTP, setverifiedOTP] = useState(false);\n  const [chkotp, setchkOtp] = useState(\"\");\n  const [isValidEmail, setIsValidEmail] = useState(true);\n\n  useEffect(() => {\n    console.log(\"in use effect\");\n  }, [verifiedOTP]);\n  const navigate = useNavigate();\n  const handleRequestReset = async (e) => {\n    e.preventDefault();\n    try {\n      if (!email) alert(\"Email can not be empty\");\n      else {\n        var response = await axios.post(`${apiUrl}/verifyOtp`, { email });\n        console.log(response.data);\n        setchkOtp(response.data.otp);\n        setMessage(\"OTP sent to your email.\");\n      }\n    } catch (error) {\n      setMessage(\"Error sending OTP.\" + error);\n    }\n  };\n\n  const verifyotp = () => {\n    if (chkotp === otp) {\n      setverifiedOTP(true);\n      console.log(verifiedOTP);\n      alert(\"Otp verified...\");\n    } else {\n      alert(\"Invalid Otp....\");\n    }\n\n    //    console.log(verifiedOTP);\n  };\n\n  const changePass = async () => {\n    if (verifiedOTP && cnfpassword === cnf2password) {\n      const updatedCustomer = {\n        name: \"abc\",\n        password: cnfpassword,\n        email: email,\n      };\n      //setCustomer(updatedCustomer)\n      console.log(updatedCustomer);\n      var response = await axios.post(\n        `${apiUrl}/changepassword`,\n        updatedCustomer\n      );\n      navigate(\"/login\");\n    }\n  };\n\n  const handleEmailChange = (event) => {\n    const newEmail = event.target.value;\n    setEmail(newEmail);\n\n    // Regular expression for basic email validation\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    setIsValidEmail(emailPattern.test(newEmail));\n  };\n\n  return (\n    <div>\n      <h2 align=\"center\">Forgot Password</h2>\n      <form align=\"center\">\n        <input\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          className={`input ${isValidEmail ? \"\" : \"invalid\"}`}\n          value={email}\n          onChange={handleEmailChange}\n          required\n        />\n        <span></span>\n        {!isValidEmail && (\n          <p className=\"error-message\">Please enter a valid email address.</p>\n        )}\n        <button type=\"button\" onClick={handleRequestReset}>\n          Send OTP\n        </button>\n        <br></br>\n        <br></br>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your otp\"\n          value={otp}\n          onChange={(e) => {\n            setOtp(e.target.value);\n          }}\n          required\n        />\n        <button type=\"button\" onClick={verifyotp}>\n          Verify OTP\n        </button>\n        <br></br>\n        <br></br>\n        New Password:\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={cnfpassword}\n          onChange={(e) => {\n            setcnfPassword(e.target.value);\n          }}\n          required\n        />\n        <br></br>\n        <br></br>\n        Confirm Password:\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={cnf2password}\n          onChange={(e) => {\n            setcnf2Password(e.target.value);\n          }}\n          required\n        />\n        <br></br>\n        <br></br>\n        <button type=\"button\" onClick={changePass}>\n          Submit\n        </button>\n      </form>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nexport default RequestResetComponent;\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\UpdateCustomerComponent.js",["184","185"],[],"import React, { useState, useEffect } from \"react\";\n\nimport {\n  useParams,\n  useLocation,\n  Navigate,\n  useNavigate,\n} from \"react-router-dom\";\nimport CustomerService from \"../services/customer.service\";\n\nconst UpdateCustomerComponent = () => {\n  const [customer, setCustomer] = useState({ name: \"\", email: \"\" });\n  const { id } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const cust = { name: customer.name, email: customer.email, id: id };\n  useEffect(() => {\n    getCustomer();\n  }, []);\n  const customerService = new CustomerService();\n  const getCustomer = async () => {\n    try {\n      const response = await customerService.getCustomerById(id);\n\n      setCustomer(response);\n    } catch (error) {\n      console.error(\"Error fetching customer:\", error);\n    }\n  };\n\n  const updateCustomer = async (event) => {\n    event.preventDefault();\n    try {\n      await customerService.updateCustomer(cust);\n      if (location.state) {\n        navigate(`/customer-accounts/${location.state}`);\n        return;\n      }\n      window.location.href = \"/customers\";\n    } catch (error) {\n      console.error(\"Error updating customer:\", error);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <div style={{ textAlign: \"center\" }} className=\"card col-md-5 offset-3\">\n          <div className=\"card-header\" style={{ fontSize: 40 }}>\n            Update Customer Profile\n          </div>\n          <div className=\"card-body\" style={{ fontSize: 30 }}>\n            <form onSubmit={updateCustomer}>\n              <div className=\"mb-3\">\n                <div className=\"mb-3\">\n                  <label className=\"form-label\">Name</label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={customer.name}\n                    onChange={(event) =>\n                      setCustomer({ ...customer, name: event.target.value })\n                    }\n                    className=\"form-control\"\n                    style={{ fontSize: 28 }}\n                  />\n                </div>\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  value={customer.email}\n                  onChange={(event) =>\n                    setCustomer({ ...customer, email: event.target.value })\n                  }\n                  className=\"form-control\"\n                  style={{ fontSize: 28 }}\n                />\n              </div>\n              <button\n                disabled={!customer.name || !customer.email}\n                className=\"btn btn-success mt-3\"\n                style={{ fontSize: 30 }}\n                // onClick={updateCustomer}\n              >\n                Save\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UpdateCustomerComponent;\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\contactUsComponent.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\WithDrawRequests.js",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],[],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\"; // You can use this library for forms in React\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Link } from 'react-router-dom';\n\nimport CustomerService from \"../services/customer.service\";\n\n\nfunction WithDrawRequests() {\n    const [customers, setCustomers] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(0);\n    const [totalPage, setTotalPage] = useState(0);\n    const [pageSize, setPageSize] = useState(5);\n    const [customer, setCustomer] = useState(null);\n    const [username, setUsername] = useState(\"\");\n    const [roles, setRoles] = useState(null);\n\n    const navigate = useNavigate();\n\n    const { handleSubmit, register } = useForm();\n    const customerService = new CustomerService();\n    useEffect(() => {\n\n        getCustomer();\n\n    }, []);\n\n\n\n    const getCustomer =async () => {\n        const response = await customerService.getwithdrawreqs();\n      console.log(response)\n     // console.log(typeof response.DebitDTO);\n     // const aa =  response.data;\n    //   const DebitDTO=data.DebitDTO;\n    //   console.log(aa);\n  \n      // Update 'customers' state with the fetched data\n     setCustomers(response);\n\n    };\n    return (\n        <div>\n            <Link to=\"/customers\">Customers</Link>\n            \n            <table  className=\"table mt-5\">\n\n                <thead>\n                    <tr>\n                        <th>AccountId</th>\n                        <th>Amount</th>\n                        <th>Description</th>\n                        <th>UpiId</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {customers.map((c) => (\n                        <tr key={c.accountId}>\n                            <td>{c.accountId}</td>\n                            <td>{c.amount}</td>\n                            <td>{c.description}</td>\n                            <td>{c.upiId}</td>\n                        </tr>))}\n                </tbody>\n            </table>\n        </div>\n    )\n\n}\n\nexport default WithDrawRequests;","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\LoanComponent.js",["207"],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\LoginPageComponent.js",["208"],[],"import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"../store/action/user.action\";\nimport AuthService from \"../services/auth.service\";\nimport CustomerService from \"../services/customer.service\";\n//import  Customer  from '../models/customer.model';\nimport \"./LoginPageComponent.css\";\n//import { GoogleLogin } from \"react-google-login\";\nconst LoginPageComponent = () => {\n  const navigate = useNavigate();\n  const authService = AuthService();\n  const customerService = new CustomerService();\n  const dispatch = useDispatch();\n\n  const [Customer, setCustomer] = useState({\n    id: 0,\n    name: \"\",\n    email: \"\",\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    console.log(data);\n    const success = await authService.login({\n      username: data.username,\n      password: data.password,\n    });\n    console.log(success);\n    if (success) {\n      document.getElementById(\"validcred\").innerHTML = \"\";\n      const roles = localStorage.getItem(\"ROLES\");\n      console.log(roles);\n      if (roles && roles.includes(\"ADMIN\")) {\n        sessionStorage.setItem(\"ADMIN\", { admin: \"admin\" });\n        navigate(\"/customers\");\n        window.location.reload();\n      } else {\n        try {\n          console.log(data.username);\n          const customerData = await customerService.getIdCustomerByName(\n            data.username\n          );\n          console.log(customerData.id + customerData.email + \"asdasda\");\n          setCustomer(customerData);\n          const user = { id: customerData.id, email: customerData.email };\n          sessionStorage.setItem(\"CUSTOMER\", user);\n          dispatch(setCurrentUser(user));\n          navigate(`/customer-accounts/${customerData.id}`);\n          // setTimeout(() => {\n          //   window.location.reload();\n          // }, 1000);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    } else {\n      document.getElementById(\"validcred\").innerHTML = \"Invalid Credential!\";\n      navigate(\"/login\");\n    }\n  };\n\n  const forgotPass = () => {\n    navigate(\"/forgotPass\");\n  };\n  const signup = () => {\n    navigate(\"/signup\");\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }} className=\"background-container\">\n      <div className=\"page\">\n        <div className=\"container\">\n          <div className=\"d-flex justify-content-center h-100\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h3>Sign In</h3>\n              </div>\n              <span\n                class=\"validcred\"\n                id=\"validcred\"\n                style={{ color: \"red\" }}\n              ></span>\n              <div className=\"card-body\">\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"bi bi-person\"></i>\n                      </span>\n                    </div>\n                    <input\n                      required\n                      type=\"text\"\n                      className={`form-control ${\n                        errors.username ? \"is-invalid\" : \"\"\n                      }`}\n                      placeholder=\"username\"\n                      {...register(\"username\")}\n                      autoComplete=\"current-username\"\n                    />\n                  </div>\n                  <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\">\n                        <i className=\"bi bi-key\"></i>\n                      </span>\n                    </div>\n                    <input\n                      required\n                      type=\"password\"\n                      className={`form-control ${\n                        errors.password ? \"is-invalid\" : \"\"\n                      }`}\n                      placeholder=\"password\"\n                      {...register(\"password\")}\n                      autoComplete=\"current-password\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"submit\"\n                      disabled={Object.keys(errors).length > 0}\n                      value=\"Login\"\n                      className={`btn float-right login_btn `}\n                    />\n\n                    <button type=\"button\" onClick={forgotPass} id=\"forgotpass\">\n                      Forgot password\n                    </button>\n                  </div>\n                  <button type=\"button\" onClick={signup} id=\"signup\">\n                    Create Account\n                  </button>\n                  {/* <GoogleButton\n          style={{ marginTop: 10 }}\n          onPress={() => authService.loginWithGoogle()}\n        /> */}\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"marquee-container\">\n        <p class=\"marquee-text\"> NEXBANK C-DAC 2025 Project</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPageComponent;\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\CustomerAccountComponent.js",["209","210","211","212"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport { Container, Table, Alert, Spinner } from \"react-bootstrap\";\nimport CustomerService from \"../services/customer.service\";\nimport Navbar from \"../component/Navbar\";\nimport \"./CustomerAccountComponent.css\";\nconst CustomerAccountsComponent = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const customerService = new CustomerService();\n  const location = useLocation();\n  const [customer, setCustomer] = useState({});\n  const [customer1, setCustomer1] = useState({});\n  const [accounts, setAccounts] = useState([]);\n  const [roles, setRoles] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(id);\n    async function fetchData() {\n      try {\n        const customerData = await customerService.getOneCustomer(parseInt(id));\n        setCustomer(customerData);\n        setCustomer1(customerData);\n\n        const accountsData = await customerService.getAccountsOfCustomer(\n          parseInt(id)\n        );\n        setAccounts(accountsData);\n\n        const storedRoles = localStorage.getItem(\"ROLES\");\n        setRoles(storedRoles);\n\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setErrorMessage(\"Error fetching data\");\n        setLoading(false);\n      }\n    }\n\n    fetchData();\n  }, []);\n\n  const viewOperations = (account) => {\n    navigate(`/one-account/${account.id}`, { state: id });\n  };\n\n  const updateProfile = (account) => {\n    navigate(`/update-customer/${id}`, { state: id });\n  };\n  function getFirstWord(inputString) {\n    const match = inputString.match(/^\\w+/);\n    return match ? match[0] : null;\n  }\n\n  const capitalizeFirstLetter = (inputString) => {\n    return inputString.charAt(0).toUpperCase() + inputString.slice(1);\n  };\n\n  return (\n    <Container className=\"background-containers\">\n      {loading ? (\n        <Spinner animation=\"border\" variant=\"primary\" />\n      ) : errorMessage ? (\n        <Alert variant=\"danger\">{errorMessage}</Alert>\n      ) : (\n        <>\n          <div style={{ textAlign: \"center\" }} className=\"card\">\n            <div className=\"card-header\">\n              <h2 style={{ fontSize: \"40px\" }}></h2>\n              <Table className=\"table\" style={{ fontSize: \"20px\" }}>\n                <thead>\n                  <tr>\n                    <th>Name :</th>\n                    <th>{customer.name}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <th>Email :</th>\n                    <th>{customer.email}</th>\n                  </tr>\n                </tbody>\n              </Table>\n              <button className=\"view-profile-button\" onClick={updateProfile}>\n                Update Profile\n              </button>\n            </div>\n            <div className=\"card-body\" style={{ fontSize: \"18px\" }}>\n              <h2 style={{ fontSize: \"40px\" }}>Accounts</h2>\n              <Table className=\"tables\">\n                <thead>\n                  <tr>\n                    <th>Account Id</th>\n                    {(customer1.id === customer.id ||\n                      (roles !== null && roles.includes(\"ADMIN\"))) && (\n                      <th>Balance</th>\n                    )}\n                    <th>Type</th>\n                    {(customer1.id === customer.id ||\n                      (roles !== null && roles.includes(\"ADMIN\"))) && (\n                      <th>Actions</th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody>\n                  {accounts.map((account) => (\n                    <tr key={account.id}>\n                      <td>{account.id}</td>\n                      {(customer1.id === customer.id ||\n                        (roles !== null && roles.includes(\"ADMIN\"))) && (\n                        <td>{account.balance} Rs</td>\n                      )}\n                      <td>\n                        {capitalizeFirstLetter(getFirstWord(account.type))}\n                      </td>\n                      {(customer1.id === customer.id ||\n                        (roles !== null && roles.includes(\"ADMIN\"))) && (\n                        <td>\n                          <button\n                            onClick={() => viewOperations(account)}\n                            className=\"btn btn-warning\"\n                          >\n                            View All Operations\n                          </button>\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </div>\n          </div>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default CustomerAccountsComponent;\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Admin-Navbar\\MainPage.js",["213"],[],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { AdminNavbar } from \"./admin-navbar\";\nimport { Sidebar } from \"./Sidebar\";\n\nconst MainPage = () => {\n  return (\n    <div>\n      <AdminNavbar />\n      <div className=\"container-fluid p-0 m-0\">\n        <div className=\"row\">\n          <div className=\"col-md-3 p-0\">\n            <Sidebar />\n          </div>\n          <div className=\"col-md-9 p-0\" style={{ marginLeft: -40 }}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { MainPage };\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\Components\\FDComponent.js",["214"],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\reducer\\user.reducer.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\type.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\services\\customer.service.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Admin-Navbar\\admin-navbar.js",["215"],[],"import './assets/css/style.css';\nimport './assets/vendor/bootstrap/css/bootstrap.min.css';\nimport './assets/vendor/bootstrap-icons/bootstrap-icons.css';\nimport './assets/img/apple-touch-icon.png';\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\n\nconst AdminNavbar = () => {\n  const loginUser = useSelector(state => state.user);\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-lg header fixed-top\">\n        <div className=\"container-fluid\">\n          <Link to=\"/\" className=\"navbar-brand text-white fw-bold\"><i class=\"fa-solid fa-list\"></i>NexBank</Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item dropdown pe-3\">\n                <a className=\"nav-link nav-profile d-flex align-items-center pe-0 text-light\" href=\"#\">\n                  <i className=\"bi bi-person-circle\"></i>\n                  <span className=\"d-none d-md-block ps-2\">{loginUser.firstName}</span>\n                </a>\n              </li>\n            </ul>\n\n          </div>\n        </div>\n      </nav>\n\n    </React.Fragment>\n  );\n}\n\nexport { AdminNavbar };","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\common\\constant.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\services\\auth.service.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\services\\accounts.service.js",["216"],[],"import React from 'react';\nimport axios from 'axios';\nimport { apiUrl } from '../common/constant';\n\n\n\nconst token = localStorage.getItem('JWT_TOKEN');\nconst headers = { Authorization: `Bearer ${token}` };\n\nclass AccountsService {\n  getAccount(accountId, page, size) {\n    return axios.get(`${apiUrl}/accounts/${accountId}/pageOperations?page=${page}&size=${size}`,{headers})\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  makeDebit(accountId, amount, description,upiId) {\n    const data = { accountId, amount, description,upiId };\n    return axios.post(`${apiUrl}/accounts/debit`, data,{headers})\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  makeCredit(accountId, amount, description) {\n    const data = { accountId, amount, description };\n    return axios.post(`${apiUrl}/accounts/credit`, data,{headers})\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  makeTransfer(accountDestination, accountSource, amount, description) {\n    const data = { accountSource, accountDestination, amount, description };\n    return axios.post(`${apiUrl}/accounts/transfer`, data,{headers})\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  updateAccount(bankAccount) {\n    return axios.put(`${apiUrl}/accounts/${bankAccount.id}`, bankAccount,{headers})\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n      });\n  }\n}\n\nexport default  AccountsService;\n","C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\store\\action\\user.action.js",[],[],"C:\\Users\\ASUS\\Downloads\\Sun-Bank-Digital-Wallet-Service-main\\Sun-Bank-Digital-Wallet-Service-main\\Project Final Data\\FrontEnd\\src\\component\\Admin-Navbar\\Sidebar.js",["217","218","219"],[],"import React, { useEffect } from 'react';\nimport './assets/css/style.css';\nimport './assets/vendor/bootstrap/css/bootstrap.min.css';\nimport './assets/vendor/bootstrap-icons/bootstrap-icons.css';\nimport './assets/img/apple-touch-icon.png';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearCurrentUser } from '../../store/action/user.action';\n\nconst Sidebar = () => {\n\n    const loginUser = useSelector(state => state.user);\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const logout = () => {\n        const st = window.confirm(\"Do you want logout\");\n        if (st) {\n            dispatch(clearCurrentUser());\n            navigate(\"/login\")\n        }\n    }\n\n\n\n    return (\n        <>\n\n\n            {\n                loginUser.role === 'ROLE_ADMIN' &&\n\n                <aside id=\"sidebar\" className=\"sidebar\" >\n\n                    <ul className=\"sidebar-nav\" id=\"sidebar-nav\">\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/admin/ahome\" className=\"nav-link \">\n                                <i className=\"bi bi-grid\"></i>\n                                <span>Dashboard</span>\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"status\" className=\"nav-link collapsed\">\n                                <i class=\"fas fa-id-card-alt\"></i>\n                                <span>Status</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"account\" className=\"nav-link collapsed\">\n                                <i class=\"fa-solid fa-file-invoice\"></i>\n                                <span>Account</span>\n                            </Link></li>\n\n\n                        <li className=\"nav-item\">\n                            <Link to=\"transaction\" className=\"nav-link collapsed\" >\n                                <i\n                                    class=\"fa-solid fa-bookmark\"></i>\n                                <span>Trasaction</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"viewTransaction\" className=\"nav-link collapsed\">\n                                <i class=\"fa-solid fa-list\"></i>\n                                <span>View Transaction</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"addEmp\" className=\"nav-link collapsed\">\n                                <i\n                                    class=\"fas fa-user-circle\"></i>\n                                <span>Add Emp</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"ViewEmp\" className=\"nav-link collapsed\">\n                                <i class=\"fa-solid fa-list\"></i>\n                                <span>Emp Details</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link collapsed\" onClick={() => logout()}>\n                                <i class=\"fa-solid fa-right-from-bracket\"></i>\n                                <span>Logout</span>\n                            </a></li>\n                    </ul>\n                </aside>\n\n            }\n\n\n            {\n                loginUser.role === 'ROLE_EMP' &&\n\n                <aside id=\"sidebar\" className=\"sidebar\" >\n\n                    <ul className=\"sidebar-nav\" id=\"sidebar-nav\">\n\n                        <li className=\"nav-item\">\n                            <Link to=\"/emp/ehome\" className=\"nav-link \">\n                                <i className=\"bi bi-grid\"></i>\n                                <span>Dashboard</span>\n                            </Link>\n                        </li>\n\n\n\n                        <li className=\"nav-item\">\n                            <Link to=\"account\" className=\"nav-link collapsed\">\n                                <i class=\"fa-solid fa-file-invoice\"></i>\n                                <span>Account</span>\n                            </Link></li>\n\n\n                        <li className=\"nav-item\">\n                            <Link to=\"transaction\" className=\"nav-link collapsed\" >\n                                <i class=\"fa-solid fa-bookmark\"></i>\n                                <span>Trasaction</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"viewTransaction\" className=\"nav-link collapsed\">\n                                <i class=\"fa-solid fa-list\"></i>\n                                <span>View Transaction</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <Link to=\"addCustomer\" className=\"nav-link collapsed\">\n                                <i class=\"fas fa-user-circle\"></i>\n                                <span>Add Customer</span>\n                            </Link></li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link collapsed\" onClick={() => logout()}>\n                                <i class=\"fa-solid fa-right-from-bracket\"></i>\n                                <span>Logout</span>\n                            </a></li>\n                    </ul>\n                </aside>\n\n            }\n\n\n\n        </>\n    )\n}\n\nexport { Sidebar };\n",{"ruleId":"220","severity":1,"message":"221","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":12},{"ruleId":"220","severity":1,"message":"224","line":13,"column":10,"nodeType":"222","messageId":"223","endLine":13,"endColumn":18},{"ruleId":"220","severity":1,"message":"225","line":21,"column":10,"nodeType":"222","messageId":"223","endLine":21,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":92,"column":33,"nodeType":"228","messageId":"229","endLine":93,"endColumn":15},{"ruleId":"226","severity":1,"message":"227","line":106,"column":124,"nodeType":"228","messageId":"229","endLine":107,"endColumn":15},{"ruleId":"220","severity":1,"message":"230","line":13,"column":9,"nodeType":"222","messageId":"223","endLine":13,"endColumn":20},{"ruleId":"220","severity":1,"message":"231","line":15,"column":11,"nodeType":"222","messageId":"223","endLine":15,"endColumn":18},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"220","severity":1,"message":"233","line":2,"column":23,"nodeType":"222","messageId":"223","endLine":2,"endColumn":34},{"ruleId":"234","severity":1,"message":"235","line":75,"column":21,"nodeType":"236","endLine":82,"endColumn":22},{"ruleId":"234","severity":1,"message":"237","line":91,"column":25,"nodeType":"236","endLine":91,"endColumn":79},{"ruleId":"234","severity":1,"message":"235","line":138,"column":21,"nodeType":"236","endLine":145,"endColumn":22},{"ruleId":"234","severity":1,"message":"235","line":215,"column":21,"nodeType":"236","endLine":222,"endColumn":22},{"ruleId":"234","severity":1,"message":"237","line":231,"column":25,"nodeType":"236","endLine":231,"endColumn":79},{"ruleId":"220","severity":1,"message":"238","line":27,"column":15,"nodeType":"222","messageId":"223","endLine":27,"endColumn":23},{"ruleId":"220","severity":1,"message":"239","line":12,"column":10,"nodeType":"222","messageId":"223","endLine":12,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":24,"column":6,"nodeType":"242","endLine":24,"endColumn":8,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":74,"column":7,"nodeType":"236","endLine":74,"endColumn":11},{"ruleId":"220","severity":1,"message":"246","line":11,"column":10,"nodeType":"222","messageId":"223","endLine":11,"endColumn":21},{"ruleId":"220","severity":1,"message":"247","line":22,"column":9,"nodeType":"222","messageId":"223","endLine":22,"endColumn":17},{"ruleId":"240","severity":1,"message":"248","line":30,"column":6,"nodeType":"242","endLine":30,"endColumn":8,"suggestions":"249"},{"ruleId":"220","severity":1,"message":"250","line":69,"column":9,"nodeType":"222","messageId":"223","endLine":69,"endColumn":25},{"ruleId":"220","severity":1,"message":"238","line":57,"column":11,"nodeType":"222","messageId":"223","endLine":57,"endColumn":19},{"ruleId":"220","severity":1,"message":"251","line":6,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":11},{"ruleId":"240","severity":1,"message":"252","line":20,"column":6,"nodeType":"242","endLine":20,"endColumn":8,"suggestions":"253"},{"ruleId":"220","severity":1,"message":"254","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":12},{"ruleId":"220","severity":1,"message":"255","line":12,"column":12,"nodeType":"222","messageId":"223","endLine":12,"endColumn":24},{"ruleId":"220","severity":1,"message":"256","line":12,"column":26,"nodeType":"222","messageId":"223","endLine":12,"endColumn":41},{"ruleId":"220","severity":1,"message":"257","line":13,"column":12,"nodeType":"222","messageId":"223","endLine":13,"endColumn":25},{"ruleId":"220","severity":1,"message":"258","line":13,"column":27,"nodeType":"222","messageId":"223","endLine":13,"endColumn":43},{"ruleId":"220","severity":1,"message":"246","line":14,"column":12,"nodeType":"222","messageId":"223","endLine":14,"endColumn":23},{"ruleId":"220","severity":1,"message":"259","line":14,"column":25,"nodeType":"222","messageId":"223","endLine":14,"endColumn":39},{"ruleId":"220","severity":1,"message":"260","line":15,"column":12,"nodeType":"222","messageId":"223","endLine":15,"endColumn":21},{"ruleId":"220","severity":1,"message":"261","line":15,"column":23,"nodeType":"222","messageId":"223","endLine":15,"endColumn":35},{"ruleId":"220","severity":1,"message":"262","line":16,"column":12,"nodeType":"222","messageId":"223","endLine":16,"endColumn":20},{"ruleId":"220","severity":1,"message":"263","line":16,"column":22,"nodeType":"222","messageId":"223","endLine":16,"endColumn":33},{"ruleId":"220","severity":1,"message":"264","line":17,"column":12,"nodeType":"222","messageId":"223","endLine":17,"endColumn":20},{"ruleId":"220","severity":1,"message":"265","line":17,"column":22,"nodeType":"222","messageId":"223","endLine":17,"endColumn":33},{"ruleId":"220","severity":1,"message":"239","line":18,"column":12,"nodeType":"222","messageId":"223","endLine":18,"endColumn":20},{"ruleId":"220","severity":1,"message":"266","line":18,"column":22,"nodeType":"222","messageId":"223","endLine":18,"endColumn":33},{"ruleId":"220","severity":1,"message":"267","line":19,"column":12,"nodeType":"222","messageId":"223","endLine":19,"endColumn":17},{"ruleId":"220","severity":1,"message":"268","line":19,"column":19,"nodeType":"222","messageId":"223","endLine":19,"endColumn":27},{"ruleId":"220","severity":1,"message":"269","line":21,"column":11,"nodeType":"222","messageId":"223","endLine":21,"endColumn":19},{"ruleId":"220","severity":1,"message":"270","line":23,"column":13,"nodeType":"222","messageId":"223","endLine":23,"endColumn":25},{"ruleId":"220","severity":1,"message":"271","line":23,"column":27,"nodeType":"222","messageId":"223","endLine":23,"endColumn":35},{"ruleId":"240","severity":1,"message":"252","line":29,"column":8,"nodeType":"242","endLine":29,"endColumn":10,"suggestions":"272"},{"ruleId":"220","severity":1,"message":"247","line":12,"column":7,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"220","severity":1,"message":"273","line":17,"column":10,"nodeType":"222","messageId":"223","endLine":17,"endColumn":18},{"ruleId":"220","severity":1,"message":"274","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":14},{"ruleId":"220","severity":1,"message":"247","line":11,"column":9,"nodeType":"222","messageId":"223","endLine":11,"endColumn":17},{"ruleId":"240","severity":1,"message":"275","line":44,"column":6,"nodeType":"242","endLine":44,"endColumn":8,"suggestions":"276"},{"ruleId":"244","severity":1,"message":"245","line":72,"column":15,"nodeType":"236","endLine":72,"endColumn":48},{"ruleId":"220","severity":1,"message":"233","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":21},{"ruleId":"220","severity":1,"message":"247","line":12,"column":7,"nodeType":"222","messageId":"223","endLine":12,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":23,"column":17,"nodeType":"236","endLine":23,"endColumn":104},{"ruleId":"220","severity":1,"message":"277","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":13},{"ruleId":"220","severity":1,"message":"232","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"237","line":85,"column":29,"nodeType":"236","endLine":85,"endColumn":88},{"ruleId":"234","severity":1,"message":"237","line":137,"column":29,"nodeType":"236","endLine":137,"endColumn":88},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MainPage' is defined but never used.","'Footer' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","'RazorpayURL' is assigned a value but never used.","'options' is assigned a value but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'response' is assigned a value but never used.","'username' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchCustomers'. Either include it or remove the dependency array.","ArrayExpression",["278"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'currentPage' is assigned a value but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["279"],"'handlePageChange' is assigned a value but never used.","'Navigate' is defined but never used.","React Hook useEffect has a missing dependency: 'getCustomer'. Either include it or remove the dependency array.",["280"],"'Swal' is defined but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'searchKeyword' is assigned a value but never used.","'setSearchKeyword' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'totalPage' is assigned a value but never used.","'setTotalPage' is assigned a value but never used.","'pageSize' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'customer' is assigned a value but never used.","'setCustomer' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'roles' is assigned a value but never used.","'setRoles' is assigned a value but never used.","'navigate' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'register' is assigned a value but never used.",["281"],"'Customer' is assigned a value but never used.","'Navbar' is defined but never used.","React Hook useEffect has missing dependencies: 'customerService' and 'id'. Either include them or remove the dependency array.",["282"],"'React' is defined but never used.",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"287","fix":"289"},{"desc":"290","fix":"291"},"Update the dependencies array to be: [searchCustomers]",{"range":"292","text":"293"},"Update the dependencies array to be: [fetchData]",{"range":"294","text":"295"},"Update the dependencies array to be: [getCustomer]",{"range":"296","text":"297"},{"range":"298","text":"297"},"Update the dependencies array to be: [customerService, id]",{"range":"299","text":"300"},[911,913],"[searchCustomers]",[1256,1258],"[fetchData]",[528,530],"[getCustomer]",[1024,1026],[1482,1484],"[customerService, id]"]