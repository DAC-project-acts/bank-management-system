{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { apiUrl } from '../common/constant';\nconst token = localStorage.getItem('JWT_TOKEN');\nconst headers = {\n  Authorization: `Bearer ${token}`\n};\nclass AccountsService {\n  getAccount(accountId, page, size) {\n    return axios.get(`${apiUrl}/accounts/${accountId}/pageOperations?page=${page}&size=${size}`, {\n      headers\n    }).then(response => response.data).catch(error => {\n      console.log(error);\n    });\n  }\n  makeDebit(accountId, amount, description, upiId) {\n    const data = {\n      accountId,\n      amount,\n      description,\n      upiId\n    };\n    return axios.post(`${apiUrl}/accounts/debit`, data, {\n      headers\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  makeCredit(accountId, amount, description) {\n    const data = {\n      accountId,\n      amount,\n      description\n    };\n    return axios.post(`${apiUrl}/accounts/credit`, data, {\n      headers\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  makeTransfer(accountDestination, accountSource, amount, description) {\n    const data = {\n      accountSource,\n      accountDestination,\n      amount,\n      description\n    };\n    return axios.post(`${apiUrl}/accounts/transfer`, data, {\n      headers\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  updateAccount(bankAccount) {\n    return axios.put(`${apiUrl}/accounts/${bankAccount.id}`, bankAccount, {\n      headers\n    }).then(response => response.data).catch(error => {\n      console.log(error);\n    });\n  }\n}\nexport default AccountsService;","map":{"version":3,"names":["React","axios","apiUrl","token","localStorage","getItem","headers","Authorization","AccountsService","getAccount","accountId","page","size","get","then","response","data","catch","error","console","log","makeDebit","amount","description","upiId","post","makeCredit","makeTransfer","accountDestination","accountSource","updateAccount","bankAccount","put","id"],"sources":["C:/Users/ASUS/Downloads/Sun-Bank-Digital-Wallet-Service-main/Sun-Bank-Digital-Wallet-Service-main/Project Final Data/FrontEnd/src/services/accounts.service.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { apiUrl } from '../common/constant';\n\n\n\nconst token = localStorage.getItem('JWT_TOKEN');\nconst headers = { Authorization: `Bearer ${token}` };\n\nclass AccountsService {\n  getAccount(accountId, page, size) {\n    return axios.get(`${apiUrl}/accounts/${accountId}/pageOperations?page=${page}&size=${size}`,{headers})\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  makeDebit(accountId, amount, description,upiId) {\n    const data = { accountId, amount, description,upiId };\n    return axios.post(`${apiUrl}/accounts/debit`, data,{headers})\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  makeCredit(accountId, amount, description) {\n    const data = { accountId, amount, description };\n    return axios.post(`${apiUrl}/accounts/credit`, data,{headers})\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  makeTransfer(accountDestination, accountSource, amount, description) {\n    const data = { accountSource, accountDestination, amount, description };\n    return axios.post(`${apiUrl}/accounts/transfer`, data,{headers})\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  updateAccount(bankAccount) {\n    return axios.put(`${apiUrl}/accounts/${bankAccount.id}`, bankAccount,{headers})\n      .then(response => response.data)\n      .catch(error => {\n        console.log(error);\n      });\n  }\n}\n\nexport default  AccountsService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,oBAAoB;AAI3C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AAC/C,MAAMC,OAAO,GAAG;EAAEC,aAAa,EAAG,UAASJ,KAAM;AAAE,CAAC;AAEpD,MAAMK,eAAe,CAAC;EACpBC,UAAUA,CAACC,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAE;IAChC,OAAOX,KAAK,CAACY,GAAG,CAAE,GAAEX,MAAO,aAAYQ,SAAU,wBAAuBC,IAAK,SAAQC,IAAK,EAAC,EAAC;MAACN;IAAO,CAAC,CAAC,CACnGQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAG,SAASA,CAACX,SAAS,EAAEY,MAAM,EAAEC,WAAW,EAACC,KAAK,EAAE;IAC9C,MAAMR,IAAI,GAAG;MAAEN,SAAS;MAAEY,MAAM;MAAEC,WAAW;MAACC;IAAM,CAAC;IACrD,OAAOvB,KAAK,CAACwB,IAAI,CAAE,GAAEvB,MAAO,iBAAgB,EAAEc,IAAI,EAAC;MAACV;IAAO,CAAC,CAAC,CAC1DW,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAQ,UAAUA,CAAChB,SAAS,EAAEY,MAAM,EAAEC,WAAW,EAAE;IACzC,MAAMP,IAAI,GAAG;MAAEN,SAAS;MAAEY,MAAM;MAAEC;IAAY,CAAC;IAC/C,OAAOtB,KAAK,CAACwB,IAAI,CAAE,GAAEvB,MAAO,kBAAiB,EAAEc,IAAI,EAAC;MAACV;IAAO,CAAC,CAAC,CAC3DW,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAS,YAAYA,CAACC,kBAAkB,EAAEC,aAAa,EAAEP,MAAM,EAAEC,WAAW,EAAE;IACnE,MAAMP,IAAI,GAAG;MAAEa,aAAa;MAAED,kBAAkB;MAAEN,MAAM;MAAEC;IAAY,CAAC;IACvE,OAAOtB,KAAK,CAACwB,IAAI,CAAE,GAAEvB,MAAO,oBAAmB,EAAEc,IAAI,EAAC;MAACV;IAAO,CAAC,CAAC,CAC7DW,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAY,aAAaA,CAACC,WAAW,EAAE;IACzB,OAAO9B,KAAK,CAAC+B,GAAG,CAAE,GAAE9B,MAAO,aAAY6B,WAAW,CAACE,EAAG,EAAC,EAAEF,WAAW,EAAC;MAACzB;IAAO,CAAC,CAAC,CAC5EQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;AACF;AAEA,eAAgBV,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}