{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\Sun-Bank-Digital-Wallet-Service-main\\\\Sun-Bank-Digital-Wallet-Service-main\\\\Project Final Data\\\\FrontEnd\\\\src\\\\Components\\\\WithDrawRequests.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\"; // You can use this library for forms in React\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Link } from 'react-router-dom';\nimport CustomerService from \"../services/customer.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WithDrawRequests() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPage, setTotalPage] = useState(0);\n  const [pageSize, setPageSize] = useState(5);\n  const [customer, setCustomer] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [roles, setRoles] = useState(null);\n  const navigate = useNavigate();\n  const {\n    handleSubmit,\n    register\n  } = useForm();\n  const customerService = new CustomerService();\n  useEffect(() => {\n    getCustomer();\n  }, []);\n  const getCustomer = async () => {\n    const response = await customerService.getwithdrawreqs();\n    console.log(response);\n    // console.log(typeof response.DebitDTO);\n    // const aa =  response.data;\n    //   const DebitDTO=data.DebitDTO;\n    //   console.log(aa);\n\n    // Update 'customers' state with the fetched data\n    setCustomers(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/customers\",\n      children: \"Customers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"AccountId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"UpiId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: customers.map(c => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.accountId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: c.upiId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, c.accountId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(WithDrawRequests, \"CLzZniz0kP/DiiadWhj2qjLW35E=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = WithDrawRequests;\nexport default WithDrawRequests;\nvar _c;\n$RefreshReg$(_c, \"WithDrawRequests\");","map":{"version":3,"names":["React","useState","useEffect","useForm","useNavigate","Swal","Link","CustomerService","jsxDEV","_jsxDEV","WithDrawRequests","_s","customers","setCustomers","errorMessage","setErrorMessage","searchKeyword","setSearchKeyword","currentPage","setCurrentPage","totalPage","setTotalPage","pageSize","setPageSize","customer","setCustomer","username","setUsername","roles","setRoles","navigate","handleSubmit","register","customerService","getCustomer","response","getwithdrawreqs","console","log","children","to","fileName","_jsxFileName","lineNumber","columnNumber","className","map","c","accountId","amount","description","upiId","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/Sun-Bank-Digital-Wallet-Service-main/Sun-Bank-Digital-Wallet-Service-main/Project Final Data/FrontEnd/src/Components/WithDrawRequests.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\"; // You can use this library for forms in React\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { Link } from 'react-router-dom';\n\nimport CustomerService from \"../services/customer.service\";\n\n\nfunction WithDrawRequests() {\n    const [customers, setCustomers] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(0);\n    const [totalPage, setTotalPage] = useState(0);\n    const [pageSize, setPageSize] = useState(5);\n    const [customer, setCustomer] = useState(null);\n    const [username, setUsername] = useState(\"\");\n    const [roles, setRoles] = useState(null);\n\n    const navigate = useNavigate();\n\n    const { handleSubmit, register } = useForm();\n    const customerService = new CustomerService();\n    useEffect(() => {\n\n        getCustomer();\n\n    }, []);\n\n\n\n    const getCustomer =async () => {\n        const response = await customerService.getwithdrawreqs();\n      console.log(response)\n     // console.log(typeof response.DebitDTO);\n     // const aa =  response.data;\n    //   const DebitDTO=data.DebitDTO;\n    //   console.log(aa);\n  \n      // Update 'customers' state with the fetched data\n     setCustomers(response);\n\n    };\n    return (\n        <div>\n            <Link to=\"/customers\">Customers</Link>\n            \n            <table  className=\"table mt-5\">\n\n                <thead>\n                    <tr>\n                        <th>AccountId</th>\n                        <th>Amount</th>\n                        <th>Description</th>\n                        <th>UpiId</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {customers.map((c) => (\n                        <tr key={c.accountId}>\n                            <td>{c.accountId}</td>\n                            <td>{c.amount}</td>\n                            <td>{c.description}</td>\n                            <td>{c.upiId}</td>\n                        </tr>))}\n                </tbody>\n            </table>\n        </div>\n    )\n\n}\n\nexport default WithDrawRequests;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}