{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\Sun-Bank-Digital-Wallet-Service-main\\\\Sun-Bank-Digital-Wallet-Service-main\\\\Project Final Data\\\\FrontEnd\\\\src\\\\Components\\\\PaymentComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport AccountsService from \"../services/accounts.service\";\nimport \"./PaymentComponent.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentComponent = () => {\n  _s();\n  const [paymentId, setPaymentId] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const AccountService = new AccountsService();\n  const amt = location.state.amount;\n  const openRazorpay = async () => {\n    const options = {\n      key: \"Api Key in new version is not provided that way we used razorpay UI page\",\n      amount: amt * 100,\n      // Razorpay expects the amount in the smallest currency unit (paise), so multiply by 100 for INR\n      currency: \"INR\",\n      name: \"NexBank\",\n      description: \"Payment for services\",\n      handler: function (response) {\n        setPaymentId(response.razorpay_payment_id); // Save the payment ID\n        AccountService.makeCredit(location.state.id, amt, location.state.description);\n        navigate(`/one-account/${location.state.id}`); // Redirect to the account page after payment success\n      },\n\n      prefill: {\n        name: \"John Doe\",\n        // Prefill with the customer's name if needed\n        email: \"cdacchetangmail.com\",\n        // Replace with actual email\n        contact: \"7722004099\" // Replace with actual phone number\n      },\n\n      notes: {\n        description: \"Payment for services\"\n      },\n      theme: {\n        color: \"#F37254\" // Customize Razorpay button color\n      }\n    };\n\n    const rzp = new window.Razorpay(options); // Create Razorpay instance\n    rzp.open(); // Open Razorpay checkout modal\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your account will be credited with \", amt, \" Rs on successful transaction.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openRazorpay,\n      className: \"proceed-button\",\n      children: \"Proceed with Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), paymentId && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Payment successful! Payment ID: \", paymentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentComponent, \"rlv2CNkqGxqwwG9WBD1Tj19mJJc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = PaymentComponent;\nexport default PaymentComponent;\nvar _c;\n$RefreshReg$(_c, \"PaymentComponent\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","AccountsService","jsxDEV","_jsxDEV","PaymentComponent","_s","paymentId","setPaymentId","location","navigate","AccountService","amt","state","amount","openRazorpay","options","key","currency","name","description","handler","response","razorpay_payment_id","makeCredit","id","prefill","email","contact","notes","theme","color","rzp","window","Razorpay","open","style","display","flexDirection","alignItems","justifyContent","height","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/Sun-Bank-Digital-Wallet-Service-main/Sun-Bank-Digital-Wallet-Service-main/Project Final Data/FrontEnd/src/Components/PaymentComponent.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport AccountsService from \"../services/accounts.service\";\nimport \"./PaymentComponent.css\";\n\nconst PaymentComponent = () => {\n  const [paymentId, setPaymentId] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const AccountService = new AccountsService();\n  const amt = location.state.amount;\n\n  const openRazorpay = async () => {\n    const options = {\n      key: \"Api Key in new version is not provided that way we used razorpay UI page\",\n      amount: amt * 100,  // Razorpay expects the amount in the smallest currency unit (paise), so multiply by 100 for INR\n      currency: \"INR\",\n      name: \"NexBank\",\n      description: \"Payment for services\",\n      handler: function (response) {\n        setPaymentId(response.razorpay_payment_id); // Save the payment ID\n        AccountService.makeCredit(location.state.id, amt, location.state.description);\n        navigate(`/one-account/${location.state.id}`); // Redirect to the account page after payment success\n      },\n      prefill: {\n        name: \"John Doe\", // Prefill with the customer's name if needed\n        email: \"cdacchetangmail.com\", // Replace with actual email\n        contact: \"7722004099\", // Replace with actual phone number\n      },\n      notes: {\n        description: \"Payment for services\",\n      },\n      theme: {\n        color: \"#F37254\", // Customize Razorpay button color\n      },\n    };\n\n    const rzp = new window.Razorpay(options); // Create Razorpay instance\n    rzp.open(); // Open Razorpay checkout modal\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <h2>\n        Your account will be credited with {amt} Rs on successful transaction.\n      </h2>\n      <button onClick={openRazorpay} className=\"proceed-button\">\n        Proceed with Payment\n      </button>\n      {paymentId && <p>Payment successful! Payment ID: {paymentId}</p>}\n    </div>\n  );\n};\n\nexport default PaymentComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,cAAc,GAAG,IAAIT,eAAe,CAAC,CAAC;EAC5C,MAAMU,GAAG,GAAGH,QAAQ,CAACI,KAAK,CAACC,MAAM;EAEjC,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG;MACdC,GAAG,EAAE,0EAA0E;MAC/EH,MAAM,EAAEF,GAAG,GAAG,GAAG;MAAG;MACpBM,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,SAAS;MACfC,WAAW,EAAE,sBAAsB;MACnCC,OAAO,EAAE,SAAAA,CAAUC,QAAQ,EAAE;QAC3Bd,YAAY,CAACc,QAAQ,CAACC,mBAAmB,CAAC,CAAC,CAAC;QAC5CZ,cAAc,CAACa,UAAU,CAACf,QAAQ,CAACI,KAAK,CAACY,EAAE,EAAEb,GAAG,EAAEH,QAAQ,CAACI,KAAK,CAACO,WAAW,CAAC;QAC7EV,QAAQ,CAAE,gBAAeD,QAAQ,CAACI,KAAK,CAACY,EAAG,EAAC,CAAC,CAAC,CAAC;MACjD,CAAC;;MACDC,OAAO,EAAE;QACPP,IAAI,EAAE,UAAU;QAAE;QAClBQ,KAAK,EAAE,qBAAqB;QAAE;QAC9BC,OAAO,EAAE,YAAY,CAAE;MACzB,CAAC;;MACDC,KAAK,EAAE;QACLT,WAAW,EAAE;MACf,CAAC;MACDU,KAAK,EAAE;QACLC,KAAK,EAAE,SAAS,CAAE;MACpB;IACF,CAAC;;IAED,MAAMC,GAAG,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAAClB,OAAO,CAAC,CAAC,CAAC;IAC1CgB,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;;EAED,oBACE/B,OAAA;IACEgC,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,gBAEFtC,OAAA;MAAAsC,QAAA,GAAI,qCACiC,EAAC9B,GAAG,EAAC,gCAC1C;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL1C,OAAA;MAAQ2C,OAAO,EAAEhC,YAAa;MAACiC,SAAS,EAAC,gBAAgB;MAAAN,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRvC,SAAS,iBAAIH,OAAA;MAAAsC,QAAA,GAAG,kCAAgC,EAACnC,SAAS;IAAA;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACxC,EAAA,CAvDID,gBAAgB;EAAA,QAEHL,WAAW,EACXC,WAAW;AAAA;AAAAgD,EAAA,GAHxB5C,gBAAgB;AAyDtB,eAAeA,gBAAgB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}