{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { apiUrl } from \"../common/constant\";\nconst clearLocalStorage = () => {\n  localStorage.clear();\n};\nconst AuthService = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const login = async user => {\n    try {\n      const response = await axios.post(`${apiUrl}/login`, user);\n      const tokens = response.data;\n      doLoginUser(user.username, tokens);\n      return true;\n    } catch (error) {\n      // Handle error and display a message to the user\n      console.error(error);\n      return false;\n    }\n  };\n  const WohLogin = () => {\n    return username;\n  };\n  const logout = () => {\n    clearLocalStorage();\n    doLogoutUser();\n  };\n  const isLoggedIn = () => {\n    return !!getJwtToken();\n  };\n  const refreshToken = async () => {\n    try {\n      const response = await axios.post(`${apiUrl}/refresh`, {\n        refreshToken: getRefreshToken()\n      });\n      const tokens = response.data;\n      storeJwtToken(tokens.jwt, tokens.roles);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const getJwtToken = () => {\n    return localStorage.getItem(\"JWT_TOKEN\");\n  };\n  const doLoginUser = (username, tokens) => {\n    setUsername(username);\n    storeTokens(tokens);\n  };\n  const doLogoutUser = () => {\n    setUsername(\"\");\n    removeTokens();\n  };\n  const getRefreshToken = () => {\n    return localStorage.getItem(\"REFRESH_TOKEN\");\n  };\n  const storeJwtToken = (jwt, roles) => {\n    localStorage.setItem(\"JWT_TOKEN\", jwt);\n    localStorage.setItem(\"ROLES\", roles);\n    localStorage.setItem(\"username\", username);\n  };\n  const storeTokens = tokens => {\n    localStorage.setItem(\"JWT_TOKEN\", tokens.jwt);\n    localStorage.setItem(\"REFRESH_TOKEN\", tokens.refreshToken);\n    localStorage.setItem(\"ROLES\", tokens.roles);\n    localStorage.setItem(\"username\", username);\n  };\n  const removeTokens = () => {\n    localStorage.removeItem(\"JWT_TOKEN\");\n    localStorage.removeItem(\"REFRESH_TOKEN\");\n    localStorage.removeItem(\"ROLES\");\n    localStorage.removeItem(\"username\");\n  };\n  return {\n    login,\n    WohLogin,\n    logout,\n    isLoggedIn,\n    refreshToken\n  };\n};\n_s(AuthService, \"oX7frOsoM286qXdKn03TWCpXkD4=\");\n_c = AuthService;\nexport default AuthService;\nvar _c;\n$RefreshReg$(_c, \"AuthService\");","map":{"version":3,"names":["useState","axios","apiUrl","clearLocalStorage","localStorage","clear","AuthService","_s","username","setUsername","login","user","response","post","tokens","data","doLoginUser","error","console","WohLogin","logout","doLogoutUser","isLoggedIn","getJwtToken","refreshToken","getRefreshToken","storeJwtToken","jwt","roles","getItem","storeTokens","removeTokens","setItem","removeItem","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Downloads/Sun-Bank-Digital-Wallet-Service-main/Sun-Bank-Digital-Wallet-Service-main/Project Final Data/FrontEnd/src/services/auth.service.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\nimport { apiUrl } from \"../common/constant\";\n\nconst clearLocalStorage = () => {\n  localStorage.clear();\n};\n\nconst AuthService = () => {\n  const [username, setUsername] = useState(\"\");\n\n  const login = async (user) => {\n    try {\n      const response = await axios.post(`${apiUrl}/login`, user);\n      const tokens = response.data;\n      doLoginUser(user.username, tokens);\n      return true;\n    } catch (error) {\n      // Handle error and display a message to the user\n      console.error(error);\n      return false;\n    }\n  };\n\n  const WohLogin = () => {\n    return username;\n  };\n\n  const logout = () => {\n    clearLocalStorage();\n    doLogoutUser();\n  };\n\n  const isLoggedIn = () => {\n    return !!getJwtToken();\n  };\n\n  const refreshToken = async () => {\n    try {\n      const response = await axios.post(`${apiUrl}/refresh`, {\n        refreshToken: getRefreshToken(),\n      });\n      const tokens = response.data;\n      storeJwtToken(tokens.jwt, tokens.roles);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getJwtToken = () => {\n    return localStorage.getItem(\"JWT_TOKEN\");\n  };\n\n  const doLoginUser = (username, tokens) => {\n    setUsername(username);\n    storeTokens(tokens);\n  };\n\n  const doLogoutUser = () => {\n    setUsername(\"\");\n    removeTokens();\n  };\n\n  const getRefreshToken = () => {\n    return localStorage.getItem(\"REFRESH_TOKEN\");\n  };\n\n  const storeJwtToken = (jwt, roles) => {\n    localStorage.setItem(\"JWT_TOKEN\", jwt);\n    localStorage.setItem(\"ROLES\", roles);\n    localStorage.setItem(\"username\", username);\n  };\n\n  const storeTokens = (tokens) => {\n    localStorage.setItem(\"JWT_TOKEN\", tokens.jwt);\n    localStorage.setItem(\"REFRESH_TOKEN\", tokens.refreshToken);\n    localStorage.setItem(\"ROLES\", tokens.roles);\n    localStorage.setItem(\"username\", username);\n  };\n\n  const removeTokens = () => {\n    localStorage.removeItem(\"JWT_TOKEN\");\n    localStorage.removeItem(\"REFRESH_TOKEN\");\n    localStorage.removeItem(\"ROLES\");\n    localStorage.removeItem(\"username\");\n  };\n\n  return {\n    login,\n    WohLogin,\n    logout,\n    isLoggedIn,\n    refreshToken,\n  };\n};\n\nexport default AuthService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}