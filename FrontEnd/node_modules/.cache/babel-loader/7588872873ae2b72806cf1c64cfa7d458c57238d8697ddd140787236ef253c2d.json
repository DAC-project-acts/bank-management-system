{"ast":null,"code":"import axios from \"axios\";\nimport { apiUrl } from \"../common/constant\";\nconst token = localStorage.getItem(\"JWT_TOKEN\");\nconst headers = {\n  Authorization: `Bearer ${token}`\n};\nclass CustomerService {\n  constructor() {\n    this.http = axios.create({\n      baseURL: apiUrl\n    });\n  }\n  async getCustomer() {\n    try {\n      const response = await this.http.get(\"/customers\", {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async getOneCustomer(id) {\n    try {\n      const response = await this.http.get(`/customers/${id}`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async getIdCustomerByName(name) {\n    try {\n      console.log(headers);\n      const response = await this.http.get(`/customers/name/${name}`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async searchCustomers(keyword, page) {\n    try {\n      const response = await this.http.get(`/customers/search?keyword=${keyword}&page=${page}`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async searchAccountByCustomer(page) {\n    try {\n      const response = await this.http.get(`/Account/searchAccount?page=${page}`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async saveCustomer(customer) {\n    try {\n      const response = await this.http.post(\"/customers\", customer);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async deleteCustomer(id) {\n    try {\n      await this.http.delete(`/customers/${id}`, {\n        headers\n      });\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async updateCustomer(customer) {\n    try {\n      const response = await this.http.put(`/customer-update/${customer.id}`, customer, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async getCustomerById(id) {\n    try {\n      const response = await this.http.get(`/customers/${id}`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async getAccountsOfCustomer(id) {\n    try {\n      const response = await this.http.get(`/customers/${id}/accounts`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async getwithdrawreqs() {\n    try {\n      const response = await this.http.get(`/withdrawreqs`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nexport default CustomerService;","map":{"version":3,"names":["axios","apiUrl","token","localStorage","getItem","headers","Authorization","CustomerService","constructor","http","create","baseURL","getCustomer","response","get","data","error","console","getOneCustomer","id","getIdCustomerByName","name","log","searchCustomers","keyword","page","searchAccountByCustomer","saveCustomer","customer","post","deleteCustomer","delete","updateCustomer","put","getCustomerById","getAccountsOfCustomer","getwithdrawreqs"],"sources":["C:/Users/ASUS/Downloads/Sun-Bank-Digital-Wallet-Service-main/Sun-Bank-Digital-Wallet-Service-main/Project Final Data/FrontEnd/src/services/customer.service.js"],"sourcesContent":["import axios from \"axios\";\nimport { apiUrl } from \"../common/constant\";\n\nconst token = localStorage.getItem(\"JWT_TOKEN\");\nconst headers = { Authorization: `Bearer ${token}` };\n\nclass CustomerService {\n  constructor() {\n    this.http = axios.create({\n      baseURL: apiUrl,\n    });\n  }\n\n  async getCustomer() {\n    try {\n      const response = await this.http.get(\"/customers\", { headers });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async getOneCustomer(id) {\n    try {\n      const response = await this.http.get(`/customers/${id}`, { headers });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async getIdCustomerByName(name) {\n    try {\n      console.log(headers);\n      const response = await this.http.get(`/customers/name/${name}`, {\n        headers,\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async searchCustomers(keyword, page) {\n    try {\n      const response = await this.http.get(\n        `/customers/search?keyword=${keyword}&page=${page}`,\n        { headers }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async searchAccountByCustomer(page) {\n    try {\n      const response = await this.http.get(\n        `/Account/searchAccount?page=${page}`,\n        { headers }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async saveCustomer(customer) {\n    try {\n      const response = await this.http.post(\"/customers\", customer);\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      // throw error;\n    }\n  }\n\n  async deleteCustomer(id) {\n    try {\n      await this.http.delete(`/customers/${id}`, { headers });\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async updateCustomer(customer) {\n    try {\n      const response = await this.http.put(\n        `/customer-update/${customer.id}`,\n        customer,\n        { headers }\n      );\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async getCustomerById(id) {\n    try {\n      const response = await this.http.get(`/customers/${id}`, { headers });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      //throw error;\n    }\n  }\n\n  async getAccountsOfCustomer(id) {\n    try {\n      const response = await this.http.get(`/customers/${id}/accounts`, {\n        headers,\n      });\n      return response.data;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async getwithdrawreqs() {\n    try {\n      const response = await this.http.get(`/withdrawreqs`, { headers });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default CustomerService;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}